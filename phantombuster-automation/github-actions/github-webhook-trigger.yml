name: Trigger Phantombuster Automation via Webhook

on:
  workflow_dispatch:  # Manual trigger
  schedule:
    # Run daily at 3 AM UTC
    - cron: '0 3 * * *'
  push:
    branches: [ main ]
    paths:
      - 'selenium_download.py'
      - 'github_webhook.py'

jobs:
  trigger-automation:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flask requests
    
    - name: Start webhook server
      run: |
        python github_webhook.py &
        sleep 10  # Wait for server to start
      env:
        PORT: 5000
        DEBUG: false
    
    - name: Trigger automation via webhook
      run: |
        curl -X POST http://localhost:5000/trigger \
          -H "Content-Type: application/json" \
          -d '{"triggered_by": "github_actions"}'
    
    - name: Wait for automation to complete
      run: |
        # Wait up to 30 minutes for automation to complete
        timeout=1800
        elapsed=0
        while [ $elapsed -lt $timeout ]; do
          status=$(curl -s http://localhost:5000/api/status | jq -r '.running')
          if [ "$status" = "false" ]; then
            echo "Automation completed"
            break
          fi
          echo "Automation still running... ($elapsed/$timeout seconds)"
          sleep 30
          elapsed=$((elapsed + 30))
        done
    
    - name: Get results
      run: |
        echo "Fetching results..."
        curl -s http://localhost:5000/api/results > results.json
        echo "Results saved to results.json"
        
        # Display summary
        echo "=== AUTOMATION RESULTS ==="
        cat results.json | jq '.'
    
    - name: Upload results as artifact
      uses: actions/upload-artifact@v3
      with:
        name: phantombuster-results
        path: results.json
        retention-days: 30
    
    - name: Comment on PR (if applicable)
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        script: |
          const results = require('./results.json');
          const comment = `## ðŸ¤– Phantombuster Automation Results
          
          **Status:** ${results.running ? 'Running' : 'Completed'}
          **Total Folders:** ${results.total_folders}
          **Total Files:** ${results.total_files}
          **Last Run:** ${results.timestamp || 'N/A'}
          
          ${results.error ? `**Error:** ${results.error}` : 'âœ… Automation completed successfully'}
          
          [View Full Results](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
          `;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });
